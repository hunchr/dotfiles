[advice]
	mergeConflict = false
[alias]
	a = add
	aa = add .
	b = branch -a --format='%(HEAD) %(refname:short) %(color:black)(%(committerdate:relative))'
	c = checkout
	cb = checkout -b
	cd = checkout develop
	cfg = !code {{HOME}}/.gitconfig
	cfgw = !code {{HOME}}/.gitconfig.work
	cl = clone
	cls = clone --depth=1
	cm = !git checkout "$(git branch --format '%(refname:short)' -l main master)"
	co = !TZ=UTC git commit -S -m
	d = !git diff $(git rev-parse HEAD) origin/HEAD --name-status
	db = branch -D
	f = !git fetch -p origin && git for-each-ref --format='%(refname:short) %(upstream:track)' | awk '$2 == \"[gone]\" {print $1}' | xargs -r git branch -D
	fa = git fetch -p --all
	l = log --oneline --max-count=100
	ld = log --date=format:'%Y-%m-%d' --pretty=format:'%h %ad %s'
	p = push
	pf = push -f
	pl = pull
	pr = pull -r origin
	prd = !git pull -r origin develop || fork .
	prm = !git pull -r origin "$(git branch --format '%(refname:short)' -l main master)" || fork .
	r = reset
	r1 = reset HEAD~1
	r2 = reset HEAD~2
	rd = reset origin/develop
	rg = remote get-url origin
	rh = reset --hard
	rma = !git reset "origin/$(git branch --format '%(refname:short)' -l main master)"
	rp = repack -adf --depth=250 --window=250
	rs = remote set-url origin
	s = show
	sl = shortlog -ens
	ss = show --compact-summary --stat=80
	st = status
	sw = switch --orphan
	t = !git tag "$1" && git push origin tag "$1"
	tl = tag -l --sort=-v:refname
	w = config --get user.email
[checkout]
	defaultRemote = origin
[commit]
	gpgsign = true
[core]
	editor = code
	excludesFile = {{HOME}}/.gitignore
	pager = cat
[credential]
	helper = /usr/local/share/gcm-core/git-credential-manager
[gpg]
	format = openpgp
	program = gpg
[init]
	defaultBranch = main
[pager]
	log = less
[pull]
	rebase = true
[push]
	autoSetupRemote = true
[includeIf "gitdir:{{GIT_PERSONAL_DIR}}/"]
	path = {{HOME}}/.gitconfig.personal
[includeIf "gitdir:{{GIT_PERSONAL_DRIVE}}/"]
	path = {{HOME}}/.gitconfig.personal
[includeIf "gitdir:{{GIT_WORK_DIR}}/"]
	path = {{HOME}}/.gitconfig.work
[includeIf "gitdir:{{GIT_WORK_DRIVE}}/"]
	path = {{HOME}}/.gitconfig.work
